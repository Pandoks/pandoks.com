apiVersion: v1
kind: Service
metadata:
  name: &app '{{ .Values.db }}-pgcat'
  namespace: '{{ .Values.namespace }}'
  labels:
    app: *app
spec:
  ports:
    - port: 6432
      targetPort: 6432
  selector:
    app: *app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app '{{ .Values.db }}-pgcat'
  namespace: '{{ .Values.namespace }}'
  labels:
    app: *app
spec:
  replicas: {{ .Values.pgcat.replicas }}
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: pgcat
          image: ghcr.io/pandoks/pgcat:latest
          env:
            - name: POSTGRES_DB
              value: '{{ .Values.db }}'
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: &db_creds '{{ .Values.db }}-db-creds'
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: *db_creds
                  key: POSTGRES_PASSWORD
            - name: PGCATPASS
              valueFrom:
                secretKeyRef:
                  name: *db_creds
                  key: PGCATPASS
            - name: MASTER_HOST
              value: patroni-{{ .Values.db }}-primary.{{ .Values.namespace }}.svc.cluster.local
            - name: SLAVE_HOST
              value: patroni-{{ .Values.db }}-replicas.{{ .Values.namespace }}.svc.cluster.local
          volumeMounts:
            - name: &app-conf pgcat-conf
              mountPath: /tmp/conf_templates/pgcat.toml
              subPath: pgcat.toml
              readOnly: true
      volumes:
        - name: *app-conf
          configMap:
            name: pgcat-config
