#cloud-config
# env variables:
# SSH_HOSTNAME
# ACCOUNT_ID
# TUNNEL_SECRET
# TUNNEL_ID
# PRIVATE_IP_RANGE
# SSH_CA_PUB
# ROLE
# K3S_TOKEN
# SERVER_API
package_update: true
package_upgrade: true
ssh_pwauth: false
disable_root: true

bootcmd:
  - iptables -F
  - iptables -P INPUT DROP
  - iptables -P FORWARD DROP
  - iptables -P OUTPUT ACCEPT
  - iptables -A INPUT -i lo -j ACCEPT
  - iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
  - iptables -A INPUT -s ${PRIVATE_IP_RANGE} -j ACCEPT
  - iptables-save > /etc/iptables.rules
  - mkdir -p /etc/cloudflared

users:
  - name: pandoks
    gecos: 'Admin User'
    groups: [sudo]
    sudo: 'ALL=(ALL) NOPASSWD:ALL'
    shell: /bin/bash

packages:
  - curl

write_files:
  - path: /etc/network/if-pre-up.d/iptables
    owner: root:root
    permissions: '0755'
    content: |
      #!/bin/sh
      iptables-restore < /etc/iptables.rules
  - path: /etc/cloudflared/credentials.json
    owner: root:root
    permissions: '0600'
    content: |
      { "AccountTag": "${ACCOUNT_ID}", "TunnelSecret": "${TUNNEL_SECRET}", "TunnelID": "${TUNNEL_ID}" }
  - path: /etc/cloudflared/config.yml
    owner: root:root
    permissions: '0644'
    content: |
      tunnel: ${TUNNEL_ID}
      credentials-file: /etc/cloudflared/credentials.json
      ingress:
        - hostname: ${SSH_HOSTNAME}
          service: ssh://localhost:22
        - service: http_status:404
  - path: /etc/ssh/ca.pub
    owner: root:root
    permissions: '0600'
    content: |
      ${SSH_CA_PUB}
  - path: /etc/ssh/sshd_config
    owner: root:root
    permissions: '0644'
    content: |
      PubkeyAuthentication yes
      TrustedUserCAKeys /etc/ssh/ca.pub
      PasswordAuthentication no
      KbdInteractiveAuthentication no
      ChallengeResponseAuthentication no
      PermitRootLogin no
      UsePAM yes
      AllowUsers pandoks
      Match User pandoks
        AuthorizedPrincipalsCommand /bin/echo 'cloudflare.sank246'
        AuthorizedPrincipalsCommandUser nobody

runcmd:
  - mkdir -p --mode=0755 /usr/share/keyrings
  - curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
  - echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared noble main' | tee /etc/apt/sources.list.d/cloudflared.list
  - apt-get update && apt-get install cloudflared
  - systemctl restart ssh || true
  - cloudflared --config /etc/cloudflared/config.yml service install || true
  - systemctl enable cloudflared && systemctl restart cloudflared
  - |
    if [ "${ROLE}" = "bootstrap" ]; then
      curl -fL https://get.k3s.io | K3S_TOKEN=${K3S_TOKEN} sh -s - server --cluster-init --disable=traefik --disable=servicelb
    elif [ "${ROLE}" = "server" ]; then
      curl -fL https://get.k3s.io | K3S_TOKEN=${K3S_TOKEN} sh -s - server --server=${SERVER_API} --disable=traefik --disable=servicelb
    else
      curl -fL https://get.k3s.io | K3S_TOKEN=${K3S_TOKEN} sh -s - agent --server=${SERVER_API}
    fi
