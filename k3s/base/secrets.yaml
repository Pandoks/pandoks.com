# used to pull private images from ghcr.io
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-auth
  namespace: example
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "Pandoks",
          "password": "${sst.GithubPersonalAccessToken}"
        }
      }
    }

---
# allows the default service account for the example namespace to pull private images from ghcr.io by default
# without needing to specify the imagePullSecrets field in the pod spec
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: example
imagePullSecrets:
  - name: ghcr-auth

---
# used to terminate TLS at the ingress controller for the traffic flow: client -> cloudflare -- here -> k3s
apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-origin-tls
  namespace: example
type: kubernetes.io/tls
stringData:
  tls.crt: |
    ${sst.HetznerOriginTlsCrt}
  tls.key: |
    ${sst.HetznerOriginTlsKey}

---
# used to pull private images from ghcr.io
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-auth
  namespace: main
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "Pandoks",
          "password": "${sst.GithubPersonalAccessToken}"
        }
      }
    }

---
# allows the default service account for the example namespace to pull private images from ghcr.io by default
# without needing to specify the imagePullSecrets field in the pod spec
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: main
imagePullSecrets:
  - name: ghcr-auth

---
apiVersion: v1
kind: Secret
metadata:
  name: main-db-creds
  namespace: main
type: Opaque
stringData:
  POSTGRES_USER: admin
  PGUSER: admin
  POSTGRES_PASSWORD: ${sst.PostgresPassword}
  PGCATPASS: ${sst.PostgresPassword}
  PGPASSWORD: ${sst.PostgresPassword}
  PGREPPASS: ${sst.PostgresPassword}
  PATRONI_PASSWORD: ${sst.PostgresPassword}

---
apiVersion: v1
kind: Secret
metadata:
  name: main-db-backup-creds
  namespace: main
type: Opaque
stringData:
  S3_KEY: ${sst.PostgresS3Key}
  S3_KEY_SECRET: ${sst.PostgresS3KeySecret}
