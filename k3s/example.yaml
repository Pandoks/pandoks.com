apiVersion: v1
kind: Namespace
metadata:
  name: example

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example
  namespace: example
  annotations:
    # https://haproxy-ingress.github.io/docs/configuration/keys
    # haproxy-ingress.github.io/path-type: regex # only for pathType: ImplementationSpecific
    haproxy-ingress.github.io/rewrite-target: /
spec:
  ingressClassName: haproxy
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: root-example
                port:
                  number: 80
          - path: /slug
            pathType: Prefix
            backend:
              service:
                name: slug-example
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: root-example
  namespace: example
  labels:
    app: root
spec:
  type: ClusterIP
  selector:
    app: root
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: slug-example
  namespace: example
  labels:
    app: slug
spec:
  type: ClusterIP
  selector:
    app: slug
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: root-example
  namespace: example
  labels:
    app: root
spec:
  replicas: 3
  selector:
    matchLabels:
      app: root
  template:
    metadata:
      labels:
        app: root
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <head><meta charset="utf-8"/><title>Hello</title></head>
              <body style="font-family: system-ui; padding: 2rem">
                <h1>Path: <span id="path"></span></h1>
                <h2>Slug: <span id="slug"></span></h2>
                <p>Deployment: root-example</p>
                <script>
                  const path = window.location.pathname;
                  const parts = path.split('/').filter(Boolean);
                  const slug = parts.length ? parts[parts.length - 1] : '';
                  document.addEventListener('DOMContentLoaded', () => {
                    document.getElementById('path').textContent = path;
                    document.getElementById('slug').textContent = slug || '(none)';
                  });
                </script>
              </body>
              </html>
              EOF
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
      volumes:
        - name: web
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slug-example
  namespace: example
  labels:
    app: slug
spec:
  replicas: 3
  selector:
    matchLabels:
      app: slug
  template:
    metadata:
      labels:
        app: slug
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <head><meta charset="utf-8"/><title>Hello</title></head>
              <body style="font-family: system-ui; padding: 2rem">
                <h1>Path: <span id="path"></span></h1>
                <h2>Slug: <span id="slug"></span></h2>
                <p>Deployment: slug-example</p>
                <script>
                  const path = window.location.pathname;
                  const parts = path.split('/').filter(Boolean);
                  const slug = parts.length ? parts[parts.length - 1] : '';
                  document.addEventListener('DOMContentLoaded', () => {
                    document.getElementById('path').textContent = path;
                    document.getElementById('slug').textContent = slug || '(none)';
                  });
                </script>
              </body>
              </html>
              EOF
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
      volumes:
        - name: web
          emptyDir: {}
