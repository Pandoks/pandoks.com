apiVersion: v1
kind: Namespace
metadata:
  name: example

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: base-example
  namespace: example
spec:
  ingressClassName: haproxy
  rules:
    - host: example.pandoks.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-root-example
                port:
                  number: 80
    - host: localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-root-example
                port:
                  number: 80

---
# NOTE: you can split ingress resources and haproxy will automatically merge them. this is called "fragmentation"
# https://haproxy-ingress.github.io/docs/configuration/keys/#fragmentation
# you should do this when you need to add distinct configs to distinct routes
# in this case, we want all requests to the /slug path to be re written to / and setnt to the slug-example service
# this allows slug-example to treat the request as a root request
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: slug-example
  namespace: example
  annotations:
    # there are more options you can look at: https://haproxy-ingress.github.io/docs/configuration/keys
    # for example, you can support regex path matching with haproxy-ingress.github.io/path-type: regex
    # which is then used when you set pathType: ImplementationSpecific
    haproxy-ingress.github.io/rewrite-target: /
spec:
  ingressClassName: haproxy
  rules:
    - host: example.pandoks.com
      http:
        paths:
          - path: /slug
            pathType: Prefix
            backend:
              service:
                name: http-slug-example
                port:
                  number: 80
    - host: localhost
      http:
        paths:
          - path: /slug
            pathType: Prefix
            backend:
              service:
                name: http-slug-example
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: http-root-example
  namespace: example
  labels:
    app: &app http-root
spec:
  type: ClusterIP
  selector:
    app: *app
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: http-slug-example
  namespace: example
  labels:
    app: &app http-slug
spec:
  type: ClusterIP
  selector:
    app: *app
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: https-root-example
  namespace: example
  labels:
    app: &app https-root
spec:
  type: ClusterIP
  selector:
    app: *app
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: https-slug-example
  namespace: example
  labels:
    app: &app https-slug
spec:
  type: ClusterIP
  selector:
    app: *app
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-root-example
  namespace: example
  labels:
    app: &app http-root
spec:
  replicas: 3
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
            - name: conf
              mountPath: /etc/nginx/conf.d
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              # Write HTML
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <body style="font-family: system-ui; padding: 2rem">
                <p>Deployment: http-root-example</p>
              </body>
              </html>
              EOF
              # Write nginx conf with catch-all
              cat << 'NGINX' > /conf/default.conf
              server {
                listen 8080;
                server_name _;
                root /usr/share/nginx/html;
                location / {
                  try_files $uri /index.html;
                }
              }
              NGINX
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
            - name: conf
              mountPath: /conf
      volumes:
        - name: web
          emptyDir: {}
        - name: conf
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-slug-example
  namespace: example
  labels:
    app: &app http-slug
spec:
  replicas: 3
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
            - name: conf
              mountPath: /etc/nginx/conf.d
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              # Write HTML
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <body style="font-family: system-ui; padding: 2rem">
                <p>Deployment: http-slug-example</p>
              </body>
              </html>
              EOF
              # Write nginx conf with catch-all
              cat << 'NGINX' > /conf/default.conf
              server {
                listen 8080;
                server_name _;
                root /usr/share/nginx/html;
                location / {
                  try_files $uri /index.html;
                }
              }
              NGINX
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
            - name: conf
              mountPath: /conf
      volumes:
        - name: web
          emptyDir: {}
        - name: conf
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: https-root-example
  namespace: example
  labels:
    app: &app https-root
spec:
  replicas: 3
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
            - name: conf
              mountPath: /etc/nginx/conf.d
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              # Write HTML
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <body style="font-family: system-ui; padding: 2rem">
                <p>Deployment: https-root-example</p>
              </body>
              </html>
              EOF
              # Write nginx conf with catch-all
              cat << 'NGINX' > /conf/default.conf
              server {
                listen 8080;
                server_name _;
                root /usr/share/nginx/html;
                location / {
                  try_files $uri /index.html;
                }
              }
              NGINX
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
            - name: conf
              mountPath: /conf
      volumes:
        - name: web
          emptyDir: {}
        - name: conf
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: https-slug-example
  namespace: example
  labels:
    app: &app https-slug
spec:
  replicas: 3
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      containers:
        - name: app
          image: ghcr.io/nginxinc/nginx-unprivileged:1.27-alpine
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: web
              mountPath: /usr/share/nginx/html
            - name: conf
              mountPath: /etc/nginx/conf.d
        - name: config
          image: busybox:1.36
          command: ['/bin/sh', '-c']
          args:
            - |
              set -eu
              # Write HTML
              cat << 'EOF' > /web/index.html
              <!doctype html>
              <html>
              <body style="font-family: system-ui; padding: 2rem">
                <p>Deployment: https-slug-example</p>
              </body>
              </html>
              EOF
              # Write nginx conf with catch-all
              cat << 'NGINX' > /conf/default.conf
              server {
                listen 8080;
                server_name _;
                root /usr/share/nginx/html;
                location / {
                  try_files $uri /index.html;
                }
              }
              NGINX
              sleep 3600000
          volumeMounts:
            - name: web
              mountPath: /web
            - name: conf
              mountPath: /conf
      volumes:
        - name: web
          emptyDir: {}
        - name: conf
          emptyDir: {}
